package com.example.bfi.domain;

import static com.example.bfi.domain.AssertUtils.zonedDataTimeSameInstant;
import static org.assertj.core.api.Assertions.assertThat;

public class ConnectorAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertConnectorAllPropertiesEquals(Connector expected, Connector actual) {
        assertConnectorAutoGeneratedPropertiesEquals(expected, actual);
        assertConnectorAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertConnectorAllUpdatablePropertiesEquals(Connector expected, Connector actual) {
        assertConnectorUpdatableFieldsEquals(expected, actual);
        assertConnectorUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertConnectorAutoGeneratedPropertiesEquals(Connector expected, Connector actual) {
        assertThat(expected)
            .as("Verify Connector auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertConnectorUpdatableFieldsEquals(Connector expected, Connector actual) {
        assertThat(expected)
            .as("Verify Connector relevant properties")
            .satisfies(e -> assertThat(e.getMaxVoltage()).as("check maxVoltage").isEqualTo(actual.getMaxVoltage()))
            .satisfies(e -> assertThat(e.getMaxAmperage()).as("check maxAmperage").isEqualTo(actual.getMaxAmperage()))
            .satisfies(e -> assertThat(e.getMaxElectricPower()).as("check maxElectricPower").isEqualTo(actual.getMaxElectricPower()))
            .satisfies(e -> assertThat(e.getTariffIds()).as("check tariffIds").isEqualTo(actual.getTariffIds()))
            .satisfies(
                e ->
                    assertThat(e.getLastUpdated())
                        .as("check lastUpdated")
                        .usingComparator(zonedDataTimeSameInstant)
                        .isEqualTo(actual.getLastUpdated())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertConnectorUpdatableRelationshipsEquals(Connector expected, Connector actual) {
        assertThat(expected)
            .as("Verify Connector relationships")
            .satisfies(e -> assertThat(e.getEvse()).as("check evse").isEqualTo(actual.getEvse()));
    }
}
