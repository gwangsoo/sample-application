package com.phoenixdarts.toss.backend.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class MatchFormatLegAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMatchFormatLegAllPropertiesEquals(MatchFormatLeg expected, MatchFormatLeg actual) {
        assertMatchFormatLegAutoGeneratedPropertiesEquals(expected, actual);
        assertMatchFormatLegAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMatchFormatLegAllUpdatablePropertiesEquals(MatchFormatLeg expected, MatchFormatLeg actual) {
        assertMatchFormatLegUpdatableFieldsEquals(expected, actual);
        assertMatchFormatLegUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMatchFormatLegAutoGeneratedPropertiesEquals(MatchFormatLeg expected, MatchFormatLeg actual) {
        assertThat(expected)
            .as("Verify MatchFormatLeg auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMatchFormatLegUpdatableFieldsEquals(MatchFormatLeg expected, MatchFormatLeg actual) {
        assertThat(expected)
            .as("Verify MatchFormatLeg relevant properties")
            .satisfies(e -> assertThat(e.getSeq()).as("check seq").isEqualTo(actual.getSeq()))
            .satisfies(e -> assertThat(e.getFirstThrowType()).as("check firstThrowType").isEqualTo(actual.getFirstThrowType()))
            .satisfies(e -> assertThat(e.getPlayMode()).as("check playMode").isEqualTo(actual.getPlayMode()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMatchFormatLegUpdatableRelationshipsEquals(MatchFormatLeg expected, MatchFormatLeg actual) {
        assertThat(expected)
            .as("Verify MatchFormatLeg relationships")
            .satisfies(e -> assertThat(e.getOption()).as("check option").isEqualTo(actual.getOption()))
            .satisfies(e -> assertThat(e.getMatchFormatSet()).as("check matchFormatSet").isEqualTo(actual.getMatchFormatSet()));
    }
}
