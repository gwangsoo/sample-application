package com.phoenixdarts.toss.backend.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class MatchFormatOptionAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMatchFormatOptionAllPropertiesEquals(MatchFormatOption expected, MatchFormatOption actual) {
        assertMatchFormatOptionAutoGeneratedPropertiesEquals(expected, actual);
        assertMatchFormatOptionAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMatchFormatOptionAllUpdatablePropertiesEquals(MatchFormatOption expected, MatchFormatOption actual) {
        assertMatchFormatOptionUpdatableFieldsEquals(expected, actual);
        assertMatchFormatOptionUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMatchFormatOptionAutoGeneratedPropertiesEquals(MatchFormatOption expected, MatchFormatOption actual) {
        assertThat(expected)
            .as("Verify MatchFormatOption auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMatchFormatOptionUpdatableFieldsEquals(MatchFormatOption expected, MatchFormatOption actual) {
        assertThat(expected)
            .as("Verify MatchFormatOption relevant properties")
            .satisfies(e -> assertThat(e.getGame01InOptionType()).as("check game01InOptionType").isEqualTo(actual.getGame01InOptionType()))
            .satisfies(
                e -> assertThat(e.getGame01OutOptionType()).as("check game01OutOptionType").isEqualTo(actual.getGame01OutOptionType())
            )
            .satisfies(
                e -> assertThat(e.getGame01BullOptionType()).as("check game01BullOptionType").isEqualTo(actual.getGame01BullOptionType())
            )
            .satisfies(e -> assertThat(e.getGame01Arrange()).as("check game01Arrange").isEqualTo(actual.getGame01Arrange()))
            .satisfies(e -> assertThat(e.getCricketOverKill()).as("check cricketOverKill").isEqualTo(actual.getCricketOverKill()))
            .satisfies(e -> assertThat(e.getCricketScore()).as("check cricketScore").isEqualTo(actual.getCricketScore()))
            .satisfies(
                e -> assertThat(e.getTeamGame01FreezeView()).as("check teamGame01FreezeView").isEqualTo(actual.getTeamGame01FreezeView())
            )
            .satisfies(e -> assertThat(e.getTeamGame01Point()).as("check teamGame01Point").isEqualTo(actual.getTeamGame01Point()))
            .satisfies(e -> assertThat(e.getTeamCricketMark()).as("check teamCricketMark").isEqualTo(actual.getTeamCricketMark()))
            .satisfies(e -> assertThat(e.getTeamCricketFinish()).as("check teamCricketFinish").isEqualTo(actual.getTeamCricketFinish()))
            .satisfies(e -> assertThat(e.getTeamCricketPoint()).as("check teamCricketPoint").isEqualTo(actual.getTeamCricketPoint()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMatchFormatOptionUpdatableRelationshipsEquals(MatchFormatOption expected, MatchFormatOption actual) {
        assertThat(expected)
            .as("Verify MatchFormatOption relationships")
            .satisfies(e -> assertThat(e.getMatchFormat()).as("check matchFormat").isEqualTo(actual.getMatchFormat()));
    }
}
