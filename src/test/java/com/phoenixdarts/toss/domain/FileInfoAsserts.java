package com.phoenixdarts.toss.backend.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class FileInfoAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFileInfoAllPropertiesEquals(FileInfo expected, FileInfo actual) {
        assertFileInfoAutoGeneratedPropertiesEquals(expected, actual);
        assertFileInfoAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFileInfoAllUpdatablePropertiesEquals(FileInfo expected, FileInfo actual) {
        assertFileInfoUpdatableFieldsEquals(expected, actual);
        assertFileInfoUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFileInfoAutoGeneratedPropertiesEquals(FileInfo expected, FileInfo actual) {
        assertThat(expected)
            .as("Verify FileInfo auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFileInfoUpdatableFieldsEquals(FileInfo expected, FileInfo actual) {
        assertThat(expected)
            .as("Verify FileInfo relevant properties")
            .satisfies(e -> assertThat(e.getOriginalName()).as("check originalName").isEqualTo(actual.getOriginalName()))
            .satisfies(e -> assertThat(e.getMimeType()).as("check mimeType").isEqualTo(actual.getMimeType()))
            .satisfies(e -> assertThat(e.getFileSize()).as("check fileSize").isEqualTo(actual.getFileSize()))
            .satisfies(e -> assertThat(e.getSavedPath()).as("check savedPath").isEqualTo(actual.getSavedPath()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFileInfoUpdatableRelationshipsEquals(FileInfo expected, FileInfo actual) {}
}
