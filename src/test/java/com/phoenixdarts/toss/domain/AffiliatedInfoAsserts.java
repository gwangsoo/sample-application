package com.phoenixdarts.toss.backend.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AffiliatedInfoAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAffiliatedInfoAllPropertiesEquals(AffiliatedInfo expected, AffiliatedInfo actual) {
        assertAffiliatedInfoAutoGeneratedPropertiesEquals(expected, actual);
        assertAffiliatedInfoAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAffiliatedInfoAllUpdatablePropertiesEquals(AffiliatedInfo expected, AffiliatedInfo actual) {
        assertAffiliatedInfoUpdatableFieldsEquals(expected, actual);
        assertAffiliatedInfoUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAffiliatedInfoAutoGeneratedPropertiesEquals(AffiliatedInfo expected, AffiliatedInfo actual) {
        assertThat(expected)
            .as("Verify AffiliatedInfo auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAffiliatedInfoUpdatableFieldsEquals(AffiliatedInfo expected, AffiliatedInfo actual) {
        assertThat(expected)
            .as("Verify AffiliatedInfo relevant properties")
            .satisfies(e -> assertThat(e.getAffiliatedType()).as("check affiliatedType").isEqualTo(actual.getAffiliatedType()))
            .satisfies(e -> assertThat(e.getSeq()).as("check seq").isEqualTo(actual.getSeq()))
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getAddress()).as("check address").isEqualTo(actual.getAddress()))
            .satisfies(e -> assertThat(e.getTelNo()).as("check telNo").isEqualTo(actual.getTelNo()))
            .satisfies(e -> assertThat(e.getHomepageUrl()).as("check homepageUrl").isEqualTo(actual.getHomepageUrl()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAffiliatedInfoUpdatableRelationshipsEquals(AffiliatedInfo expected, AffiliatedInfo actual) {
        assertThat(expected)
            .as("Verify AffiliatedInfo relationships")
            .satisfies(e -> assertThat(e.getFileInfo()).as("check fileInfo").isEqualTo(actual.getFileInfo()));
    }
}
