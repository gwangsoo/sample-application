package com.phoenixdarts.toss.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class OperatorRoleAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOperatorRoleAllPropertiesEquals(OperatorRole expected, OperatorRole actual) {
        assertOperatorRoleAutoGeneratedPropertiesEquals(expected, actual);
        assertOperatorRoleAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOperatorRoleAllUpdatablePropertiesEquals(OperatorRole expected, OperatorRole actual) {
        assertOperatorRoleUpdatableFieldsEquals(expected, actual);
        assertOperatorRoleUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOperatorRoleAutoGeneratedPropertiesEquals(OperatorRole expected, OperatorRole actual) {
        assertThat(expected)
            .as("Verify OperatorRole auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOperatorRoleUpdatableFieldsEquals(OperatorRole expected, OperatorRole actual) {
        assertThat(expected)
            .as("Verify OperatorRole relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getDisplayOrder()).as("check displayOrder").isEqualTo(actual.getDisplayOrder()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOperatorRoleUpdatableRelationshipsEquals(OperatorRole expected, OperatorRole actual) {}
}
