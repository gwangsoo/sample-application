package com.phoenixdarts.toss.backend.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class RewardAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRewardAllPropertiesEquals(Reward expected, Reward actual) {
        assertRewardAutoGeneratedPropertiesEquals(expected, actual);
        assertRewardAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRewardAllUpdatablePropertiesEquals(Reward expected, Reward actual) {
        assertRewardUpdatableFieldsEquals(expected, actual);
        assertRewardUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRewardAutoGeneratedPropertiesEquals(Reward expected, Reward actual) {
        assertThat(expected)
            .as("Verify Reward auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRewardUpdatableFieldsEquals(Reward expected, Reward actual) {
        assertThat(expected)
            .as("Verify Reward relevant properties")
            .satisfies(e -> assertThat(e.getRewardMethodType()).as("check rewardMethodType").isEqualTo(actual.getRewardMethodType()))
            .satisfies(
                e -> assertThat(e.getRewardMethodSubType()).as("check rewardMethodSubType").isEqualTo(actual.getRewardMethodSubType())
            )
            .satisfies(e -> assertThat(e.getRewardCategoryNum()).as("check rewardCategoryNum").isEqualTo(actual.getRewardCategoryNum()))
            .satisfies(e -> assertThat(e.getMachineKindType()).as("check machineKindType").isEqualTo(actual.getMachineKindType()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRewardUpdatableRelationshipsEquals(Reward expected, Reward actual) {}
}
