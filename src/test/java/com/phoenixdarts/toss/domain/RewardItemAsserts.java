package com.phoenixdarts.toss.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class RewardItemAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRewardItemAllPropertiesEquals(RewardItem expected, RewardItem actual) {
        assertRewardItemAutoGeneratedPropertiesEquals(expected, actual);
        assertRewardItemAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRewardItemAllUpdatablePropertiesEquals(RewardItem expected, RewardItem actual) {
        assertRewardItemUpdatableFieldsEquals(expected, actual);
        assertRewardItemUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRewardItemAutoGeneratedPropertiesEquals(RewardItem expected, RewardItem actual) {
        assertThat(expected)
            .as("Verify RewardItem auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRewardItemUpdatableFieldsEquals(RewardItem expected, RewardItem actual) {
        assertThat(expected)
            .as("Verify RewardItem relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRewardItemUpdatableRelationshipsEquals(RewardItem expected, RewardItem actual) {
        assertThat(expected)
            .as("Verify RewardItem relationships")
            .satisfies(e -> assertThat(e.getItemImage()).as("check itemImage").isEqualTo(actual.getItemImage()))
            .satisfies(e -> assertThat(e.getRewardDetail()).as("check rewardDetail").isEqualTo(actual.getRewardDetail()));
    }
}
