package com.phoenixdarts.toss.backend.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class MachineAreaAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMachineAreaAllPropertiesEquals(MachineArea expected, MachineArea actual) {
        assertMachineAreaAutoGeneratedPropertiesEquals(expected, actual);
        assertMachineAreaAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMachineAreaAllUpdatablePropertiesEquals(MachineArea expected, MachineArea actual) {
        assertMachineAreaUpdatableFieldsEquals(expected, actual);
        assertMachineAreaUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMachineAreaAutoGeneratedPropertiesEquals(MachineArea expected, MachineArea actual) {
        assertThat(expected)
            .as("Verify MachineArea auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMachineAreaUpdatableFieldsEquals(MachineArea expected, MachineArea actual) {
        assertThat(expected)
            .as("Verify MachineArea relevant properties")
            .satisfies(e -> assertThat(e.getMame()).as("check mame").isEqualTo(actual.getMame()))
            .satisfies(e -> assertThat(e.getSeq()).as("check seq").isEqualTo(actual.getSeq()))
            .satisfies(e -> assertThat(e.getNumOfMachine()).as("check numOfMachine").isEqualTo(actual.getNumOfMachine()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMachineAreaUpdatableRelationshipsEquals(MachineArea expected, MachineArea actual) {
        assertThat(expected)
            .as("Verify MachineArea relationships")
            .satisfies(e -> assertThat(e.getCompetition()).as("check competition").isEqualTo(actual.getCompetition()));
    }
}
