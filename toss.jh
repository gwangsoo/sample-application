application {
  config {
    baseName toss
    applicationType monolith
    packageName com.phoenixdarts.toss
    authenticationType session
    prodDatabaseType postgresql
    clientFramework vue
    buildTool gradle
    languages [en,ko]
    nativeLanguage ko
  }
  entities *
  dto * with mapstruct
  service * with serviceImpl
}

/** 통화 */
entity Currency (tb_currency) {
  id String required maxlength(3) unique
  name String required maxlength(128)
}

/** 파일정보 */
entity FileInfo (tb_fileinfo) {
  id String required maxlength(16) unique
  /** 원래파일명 */
  originalName String required maxlength(256)
  /** MIME */
  mimeType String required maxlength(128)
  /** 파일사이즈 */
  fileSize Long
  /** 파일저장경로 */
  savedPath String required maxlength(256)
}

/** 국가 */
entity Country (tb_country) {
  /** 국가코드 */
  id String required maxlength(2) unique
  name String required maxlength(50) unique
}



/** 지역정보 */
entity Region (tb_region) {
  /** 지역코드 */
  id String required maxlength(6) unique
  name String required maxlength(50) unique
  /** 상위지역코드 */
  parentAreaId String required maxlength(6)
}



/** 권한범위 */
enum AuthScopeType {
  GLOBAL("전체국가대회"),
  COUNTRY("해당국가대회"),
  REGION("해당지역대회"),
  SHOP("해당Shop엔트리")
}

/** 권한수준 */
enum AuthLevelType {
  WRITE("Write"),
  VIEW("View"),
  OPEN("Open")
}

/** 권한 */
entity Role (tb_role) {
  id String required maxlength(16) unique
  /** Role (전체국가...) 명*/
  name String required maxlength(50)
  /** 관리범위 (GLOBAL...)  */
  authScopeType AuthScopeType required
  /** 권한등급 (View...) */
  authLevelType AuthLevelType required
  /** 출력 순서 */
  displayOrder Integer required
}

/** 관리자 Role (National dealer..) */
entity OperatorRole (tb_operator_role){
  id String required maxlength(16) unique
  /** 관리자 Role 명*/
  name String required maxlength(50)
  /** 출력 순서 */
  displayOrder Integer required
}



/** 관리자 */
entity Operator (tb_operator){
  id String required maxlength(16) unique
  /** 계정 */
  userId String required maxlength(50) unique
  /** 이름 */
  userName String required maxlength(50) unique
  /** 모바일 */
  phone String maxlength(20)
  /** 이메일 */
  email String maxlength(128)
  /** 주소 */
  address String maxlength(256)
  /** 승인상태 */
  approvalStatus Boolean required
}

/** 언어 */
entity Language (tb_language) {
  id String required maxlength(2) unique
  name String required maxlength(128)
}

/** 참가비 구분 */
enum EntryFeeType{
  FREE("무료"),
  PAY("유료")
}

/** 참가비 상세 구분 */
enum EntryFeeSubType{
  DAY("일별"),
  TOURNAMENT("토너먼트별")
}

/** 참가비 */
entity EntryFee (tb_entry_fee) {
  id String required maxlength(16) unique
  /** 참가비 구분 */
  entryFeeType EntryFeeType required
  /** 참가비 상세 구분 */
  entryFeeSubType EntryFeeSubType
  /** 참가비 납부 방법*/
  paymentMethodType PaymentMethodType
  /** 일별/토너먼트 */
  scheduleNumber Integer max(1) required
  /** 유료 시 참가비 */
  fee Integer
}



/** 경기유형 */
enum TournamentType {
  ROUNDROBIN("RoundRobin"),
  SINGLE_ELIMINATION("SingleElimination"),
  DOUBLE_ELIMINATION("DoubleElimination"),
  ROUNDROBIN_SINGLE_ELIMINATION("RoundRobin + SingleElimination"),
  ROUNDROBIN_DOUBLE_ELIMINATION("RoundRobin + DoubleElimination")
}

/** 대회상태 */
enum CompetitionStatus {
  PREPARE("Open 대기"),
  OPENING("Open 중"),
  CLOSE("종료")
}

/** 참가신청방법 */
enum EntryApplyType {
  APP("App(user)"),
  DIRECT("직접입력(Operator)")
}

/** 참가래이팅유형 */
enum EntryRatingType {
  AUTO("자동산출(Card)"),
  DIRECT("직접등록(Player)")
}

/** 참가승인방법 */
enum EntryApprovalType {
  AUTO("자동승인"),
  MANUAL("수동승인")
}

/** 대회 */
entity Competition (tb_competition) {
  /** 대회번호 국가(2)+년도(2)+일련번호(4) (KR240001) */
  id String required maxlength(16) unique
  /** 대회명 */
  name String required maxlength(256)
  /** 대회기간(시작일자) */
  startDateTime Instant required
  /** 대회기간(종료일자) */
  endDateTime Instant required
  /** 참가기간(시작일자) */
  entryStartDateTime Instant required
  /** 참가기간(종료일자) */
  entryEndDateTime Instant required
  /** 대회상태 */
  status CompetitionStatus required
  /** 대회 승인 상태*/
  approval Boolean required
  /** 참가신청방법 */
  entryApplyType EntryApplyType required
  /** 참가래이팅유형 */
  entryRatingType EntryRatingType required
}

/** Seeding Rule */
enum SeedingRuleType {
  RANDOM("Random"),
  RATING("Rating"),
  PPD("PPD"),
  MPR("MPR"),
  SHUFFLE("Shuffle"),
  SPANISH("Spanish"),
  CSV_SEED_LOADING("CSV Seed Loading"),
  ROUND_ROBIN("Round Robin 연동")
}

/** Division Rule */
enum DivisionRuleType {
  CARD_RATING("Card Rating"),
  GENERAL_RATING("General Rating"),
  COMPETITION_RATING("Competition Rating"),
  INPUT_RATING("Input Rating Operator"),
  HIGHER_RATING("Higher Rating Competition General"),
  NO_CLASSIFICATION("No Classification"),
  EVENT_POINT("Event Point")
}

/** 토너먼트 Play Mode */
enum TournamentPlayMode {
  SINGLE("Single"),
  DOUBLE("Double"),
  TRIO("Trio"),
  GALLON("Gallon")
}

/** 디비전 배정 방법 */
enum DivisionAssignMethod {
  AUTO("자동배정 (미공개)"),
  PLAYER("플레이어 선택 (공개)")
}

/** 참가자 성별 */
enum EntryGenderType {
  ALL("All"),
  MALE("Male"),
  FEMALE("Female"),
  CONCOCTION("Concoction")
}

/** Handicap */
enum HandicapType {
  NO("No Handicap"),
  OFFICIAL("Official Handicap"),
  BIGINNER("Biginner Handicap")
}

/** 토너먼트 */
entity Tournament (tb_tournament) {
  id String required maxlength(16) unique
  /** 토너먼트순서 (노출순서와 매치ID에 사용) */
  seq Integer min(1) max(99) required
  /** 토너먼트명 */
  name String required maxlength(256)
  /** 대회진행일(차수) */
  day Integer required min(1)
  /** 패자 부활 Tournament 여부 */
  eventTournament Boolean
  /** 참가마감 버튼 */
  entryClose Boolean
  /** 참가승인방법 */
  entryApprovalType EntryApprovalType required
  /** 토너먼트유형 */
  tournamentType TournamentType required
  /** Seeding Rule */
  seedingRule SeedingRuleType required
  /** 토너먼트 Play Mode */
  tournamentPlayMode TournamentPlayMode required
  /** 3위 결정 여부 */
  thirdPlaceDecision Boolean
  /** Division 구분 기준 */
  divisionRule DivisionRuleType required
  /** 엔트리 인원수 설정 false unlimited, true limit*/
  entryLimit Boolean required
  /** 엔트리인원수 */
  numOfEntry Integer required min(0)
  /** 디비전배정방법 */
  divisionAssignMethod DivisionAssignMethod required
  /** 참가자 성별 */
  entryGenderType EntryGenderType required
  /** Handicap */
  handicap HandicapType required
}

/** 라운드로빈 순위 결정 방식 */
enum RoundRobinRankingDecisionType {
  PERFECT("Perfect"),
  AMATEUR1("아마추어1"),
  AMATEUR2("아마추어2"),
  AMATEUR3("아마추어3"),
  AMATEUR4("아마추어4")
}

/** 라운드로빈 그룹 종류 */
enum RoundRobinGroupType {
  TEAM4("4 (Team) / Group"),
  TEAM5("5 (Team) / Group"),
  TEAM6("6 (Team) / Group"),
  TEAM6_4MATCH("6 (Team) / Group - 4 Matches"),
  TEAM4_2TIME_MATCH("4 (Team) / Group - Matche x 2 Times")
}

/** 다음(결승) 라운드 진출 방식 */
enum NextRoundDecisionType {
  FIRST("1위"),
  FIRST_SECOND("1위 ~ 2위"),
  FIRST_THIRD("1위 ~ 3위"),
  FIRST_FOURTH("1위 ~ 4위"),
  FIRST_FIFTH("1위 ~ 5위")
}

/** 라운드로빈 3위 결승 진출 랭킹 기준 */
enum ThirdDecisionRankingRule {
  RATING("Rating"),
  PPD("PPD"),
  MPR("MPR"),
  WIN_LOSE("Win / Lose"),
  MANUAL_DECISION("Manual Decision")
}

/** Event Range 구분 기준 */
enum EventRangeType {
  CARD_RATING("Card Rating"),
  GENERAL_RATING("General Rating"),
  COMPETITION_RATING("Competition Rating"),
  HIGHER_RATING("Higher Rating(Competition Genera)")
}

/** 디비전 */
entity Division (tb_division) {
  id String required maxlength(16) unique
  /** 디비전순서 (노출순서와 매치ID에 사용) */
  seq Integer min(1) max(99) required
  /** 디비전명 */
  name String required maxlength(256)
  /** 팀합산 Rating (최소) */
  ratingRuleTeamMin Float min(0)
  /** 팀합산 Rating (최대) */
  ratingRuleTeamMax Float min(0)
  /** 개인 레이팅 제한 여부 false unlimited, true limit */
  ratingRuleIndividualLimit Boolean
  /** 개인 Rating (최소) */
  ratingRuleIndividualMin Float min(0)
  /** 개인 Rating (최대) */
  ratingRuleIndividualMax Float min(0)
  /** 참가자 인원수 설정 false unlimited, true limit*/
  entryLimit Boolean required
  /** 라운드로빈 순위 결정 방식 */
  roundRobinRankingDecisionType RoundRobinRankingDecisionType
  /** 라운드로빈 그룹 종류 */
  roundRobinGroupType RoundRobinGroupType
  /** 다음(결승) 라운드 진출 방식 */
  nextRoundDecisionType NextRoundDecisionType
  /** 라운드로빈 3위 결승 진출 여부 */
  roundRoginThirdDecision Boolean
  /** 라운드로빈 3위 결승 진출 랭킹 기준 */
  thirdDecisionRankingRule ThirdDecisionRankingRule
  /** 모든 Round 동일 Format 사용 */
  useAllRoundSameFormat Boolean
  /** Event Range 구분 기준 */
  eventRangeType EventRangeType
  /** elimination team 수 */
  eliminationTeamCount Integer
}

/** 매치포맷 유형 */
enum MatchFormatType {
  GENERAL("General"),
  TEMPLATE("Template")
}

/** 게임 */
entity Game (tb_game) {
  id String required maxlength(16) unique
  /** 게임카테고리 */
  gameCategoryType GameCategoryType required
  /** 게임명 */
  name String required maxlength(256)
  /** 게임설명 */
  description String required maxlength(256)
  /** 라운드수 기본값 */
  roundNumDefault Integer
  /** 라운드수 범위(최소) */
  roundNumMin Integer
  /** 라운드수 범위(최대) */
  roundNumMax Integer
  /** 라운드수 무제한 */
  roundNumUnlimit Integer
}

/** 선공설정 */
enum FirstThrowType {
  COIN_TOSS("Coin Toss"),
  CENTER_CORK("Center Cork"),
  PREV_LOSER_FIRST("Previous Loser First"),
  RESERVE("Reserve")
}

/** Leg Play Mode */
enum LegPlayMode {
  SINGLE("Single"),
  DOUBLE("Double"),
  TRIO("Trio"),
  GALLON("Gallon"),
  TEAM_2("Team 2")
}

/** 매치포맷 */
entity MatchFormat (tb_matchformat) {
  id String required maxlength(16) unique
  /** 매치포맷명 */
  name String required maxlength(256)
  /** 매치포맷 설명 */
  description String required maxlength(256)
  /** 매치포맷유형 */
  matchFormatType MatchFormatType required
  /** Set 선공 설정 */
  firstSet FirstThrowType
  middleSet FirstThrowType
  lastSet FirstThrowType
}

/** 게임카테고리 */
enum GameCategoryType {
  GAME_01("01 Game"),
  CRICKET("Cricket"),
  PRACTICE("Practice")
}

/** 게임 */
enum GameType {
  GAME_301("301 Game"),
  GAME_501("501 Game"),
  GAME_701("701 Game"),
  GAME_901("901 Game"),
  GAME_1101("1101 Game"),
  GAME_151("1501 Game"),
  CRICKET_STANDARD("Standard Cricket"),
  CRICKET_CUT_THROAT("Cut-Throat Cricket"),
  COUNT_UP("Count-Up"),
  CRICKET_COUNT_UP("Cricket Count-Up"),
  BULL_SHOT("Bull Shot"),
  HALF_IT("Half-It")
}

/** Credit(별도 게임비용) */
enum MachineCreditType {
  MACHINE_DEFAULT("Machine Default Credit"),
  FREE("Free"),
  NUM_1("1"),
  NUM_2("2"),
  NUM_3("3"),
  NUM_4("4"),
  NUM_5("5"),
  NUM_6("6"),
  NUM_7("7"),
  NUM_8("8"),
  NUM_9("9"),
  NUM_10("10"),
  NUM_11("11"),
  NUM_12("12"),
  NUM_13("13"),
  NUM_14("14"),
  NUM_15("15"),
  NUM_16("16"),
  NUM_17("17"),
  NUM_18("18"),
  NUM_19("19"),
  NUM_20("20")
}

/** 매치포맷 게임 */
entity MatchFormatGame (tb_matchformat_game) {
  id String required maxlength(16) unique
  /** 게임카테고리 */
  gameCategoryType GameCategoryType required
  /** 게임 */
  gameType GameType required
  /** 라운드수 */
  roundNum Integer required
  /** Credit(별도 게임비용) */
  machineCreditType MachineCreditType required
  /** Choice 게임 포함 여부 */
  includingChoiceGame Boolean
}

/** 매치포맷 In Option */
enum MatchFormatInOptionType {
  OPEN("Open"),
  DOUBLE("Double"),
  TRIPLE("Triple"),
  MASTER("Master"),
  MASTER_BULL_0("Master Bull -> 0"),
  MASTER_BULL_BUST("Master Bull -> Bust"),
  MASTER_BULL_LOSE("Master Bull -> Lose"),
  DOUBLE_BULL_0("Double Bull -> 0"),
  DOUBLE_BULL_BUST("Double Bull -> Bust"),
  DOUBLE_BULL_LOSE("Double Bull -> Lose")
}

/** 매치포맷 Out Option */
enum MatchFormatOutOptionType {
  OPEN("Open"),
  DOUBLE("Double"),
  MASTER("Master"),
  MASTER_BULL_0("Master Bull -> 0"),
  MASTER_BULL_BUST("Master Bull -> Bust"),
  MASTER_BULL_LOSE("Master Bull -> Lose"),
  DOUBLE_BULL_0("Double Bull -> 0"),
  DOUBLE_BULL_BUST("Double Bull -> Bust"),
  DOUBLE_BULL_LOSE("Double Bull -> Lose")
}

/** 매치포맷 Bull Option */
enum MatchFormatBullOptionType {
  BULL_25_50("25/50 (Separator Bull)"),
  BULL_50_50("50/50 (Fat Bull)")
}

/** 매치포맷 Freeze Option */
enum MatchFormatFreezeOptionType {
  BUST("Bust"),
  LOSE("Lose")
}

/** 매치포맷 Team Finish Option */
enum MatchFormatTeamFinishOptionType {
  ONE_PLAYER_ONLY("1Player Only"),
  ALL_PLAYER("1P & 2P")
}

/** 매치포맷 옵션 */
entity MatchFormatOption (tb_matchformat_option) {
  id String required maxlength(16) unique
  /** 01게임 In Option */
  game01InOptionType MatchFormatInOptionType
  /** 01게임 Out Option */
  game01OutOptionType MatchFormatOutOptionType
  /** 01게임 Bull Option */
  game01BullOptionType MatchFormatBullOptionType
  /** 01게임 arrange */
  game01Arrange Boolean
  /** Cricket Over Kill */
  cricketOverKill Boolean
  /** Cricket Score */
  cricketScore Integer
  /** Team 01게임 Freeze View */
  teamGame01FreezeView Boolean
  /** Team 01게임 Freeze Option */
  teamGame01FreezeView MatchFormatFreezeOptionType
  /** Team 01게임 Point */
  teamGame01Point Boolean
  /** Team Cricket Mark */
  teamCricketMark Boolean
  /** Team Cricket Finish */
  teamCricketFinish MatchFormatTeamFinishOptionType
  /** Team Cricket Point */
  teamCricketPoint Boolean
}

/** 매치포맷 SET */
entity MatchFormatSet (tb_matchformat_Set) {
  id String required maxlength(16) unique
  /** 승리 시에 획득하는 Point */
  point Integer required min(1)
}

/** 매치포맷 LEG */
entity MatchFormatLeg (tb_matchformat_leg) {
  id String required maxlength(16) unique
  /** LEG 순서 */
  seq Integer
  /** 선공설정 */
  FirstThrowType FirstThrowType required
  /** 플레이모드 */
  playMode LegPlayMode
}



/** 이벤트 포인트 */
entity EventPoint (tb_eventpoint) {
  id String required maxlength(16) unique
  /** 순서 */
  seq Integer required
  /** Rating */
  rating Integer required
  /** Rating 범위(최소) */
  ratingMin Double
  /** Rating 범위(최대) */
  ratingMax Double
}



/** 플레이어소속 */
enum AffiliatedType {
  SHOP("Shop"),
  CLUB("Club")
}

/** 소속정보 (Shop,동호회) */
entity AffiliatedInfo (tb_affiliated_info) {
  id String required maxlength(16) unique
  /** 소속구분 */
  affiliatedType AffiliatedType required
  /** seq (shop, club) */
  seq String maxlength(20)
  /** 명칭 */
  name String required maxlength(256)
  /** 주소 */
  address String maxlength(500)
  /** 전화번호 */
  telNo String maxlength(30)
  /** 홈페이지 */
  homepageUrl String maxlength(256)
}



/** 결제 상태 */
enum PaymentStatusType {
  /** 결제 대기/요청*/
  WAITING_PAYMENT("1"),
  /** 결제 완료*/
  COMPLETE_PAYMENT("2"),
  /** 취소 대기*/
  WAITING_PAYMENT_CANCELLATION("3"),
  /** 취소 완료*/
  PAYMENT_CANCELLATION_COMPLETED("4")
}

/** 납부방법 */
enum PaymentMethodType {
  PG("Payment Gateway"),
  CASH("현금")
}

/** 결제 정보*/
entity PaymentInfo (tb_payment_info){
  id String required maxlength(16) unique
  /** 참가자 결제 상태 */
  orderNumber String maxlength(50)
  /** 결제 일자 */
  paymentCompletedDate Instant
  /** 결제 수단*/
  status PaymentStatusType required
  /** 결제 수단*/
  paymentMethodType PaymentMethodType
  /** PG 결제 TID */
  pgTID Integer
  /** PG 결제 상태 */
  pgStatus Integer min(1)
  /** PG 결제 상세내용 */
  pgDetail String maxlength(255)
  /** 결제자 정보 */
  payer String maxlength(50)
  payerPhone String maxlength(20)
}

/** 참가자 참여 여부 상태 */
enum EntryApprovalStatusType {
  WAITING_ENTRY("승인 대기"),
  COMPLETE_ENTRY("승인 완료"),
  WAITING_ENTRY_CANCELLATION("취소 대기"),
  ENTRY_CANCELLATION_COMPLETED("취소 완료")
}

/** Team */
entity Team (tb_team) {
  id String required maxlength(16) unique
  /** 참가팀번호 */
  teamNo String maxlength(8)
  /** 참가자 참여 여부 상태 */
  approvalStatus EntryApprovalStatusType required
  /** Entry date */
  entryDate ZonedDateTime
  /** 메모 */
  memo String maxlength(256)
  /** 그룹번호(RoundRobin속성) RounRobin의 경우 unique(DivisionId,GroupNo,GroupSeq) */
  groupNo Integer min(1) max(999)
  /** 그룹순서(RoundRobin속성) */
  groupSeq Integer min(1) max(9)
  /** 시드번호 (토너먼트별 시드값 정책) */
  seedNo Integer min(1) max(999)
}

/** 성별 */
enum GenderType {
  MALE("남자"),
  FEMAIL("여자")
}

/** AttendanceStatusType */
enum AttendanceStatusType {
  NON_ATTENDANCE("미출석"),
  GIVE_UP("기권"),
  ATTENDANCE("출석")
}

/** 참가자 */
entity Entry (tb_entry) {
  id String required maxlength(16) unique
  /** 참가번호 (토너먼트기준 unique) */
  entryNo String required maxlength(4)
  /** Phoenix ID */
  phoenixNo String maxlength(50)
  /** Card No */
  cardNo String maxlength(16) required
  /** 이름 */
  name String maxlength(256) required
  /** 영문명 */
  englishName String maxlength(256) required
  /** Rating */
  rating Float required min(0)
  /** 휴대폰 */
  mobileNo String maxlength(20)
  /** 생년월일 */
  birthDate LocalDate
  /** email */
  email String maxlength(256)
  /** 성별 */
  genderType GenderType required
  /** 출석상태 */
  attendanceStatusType AttendanceStatusType
}

/** 매치구분 */
enum MatchType {
  ROUND_ROBIN("Round Robin"),
  WINNER_ELIMINATION("Winner Elimination"),
  LOSER_ELIMINATION("Loser Elimination")
}



//--------------------------------------------------------------------------------------------------

/** 매치상태 */
enum MatchStatus {
  WAIT("대기중"),
  PLAYING("진행중"),
  CLOSE("종료")
}

/** 매치리스트 */
entity Match (tb_match) {
  id String required maxlength(16) unique

  /*
  < 매치번호 생성 규칙 >

  해당 대회에서 제일 먼저 시작하는 제1경기 이고, 여기에 디비젼 5의 그룹 40 의 1번 매치의 번호는?
  (정답) KR240001-01 05 R40 01

  위 경기의 본선 제1라운드 256강  122번째 매치의 번호는?
  (정답) KR240001-01 05 T 0122

  No. 0105R4001
  No. 0105T0122
  */
  /** 매치번호 unique(divisionId, matchNo)*/
  matchNo String required maxlength(9)
  /** 매치구분 */
  matchType MatchType required

  /** 그룹번호(RoundRobin) */
  groupNo Integer min(1) max(999)
  /** 그룹시합순서(RoundRobin) */
  groupMatchSeq Integer min(1) max(999)

  /** Elimination 라운드번호 */
  roundNum Integer

  /** 매치상태 */
  matchStatus MatchStatus required

  /** 다음매치번호 */
  nextMatchNo String maxlength(9)
}

/** 선수 호출 구분*/
enum PlayerCallModeType {
  AUTO_PROGRESS("자동 진행"),
  MANUAL_PROGRESS("수동 진행")
}

/** 매치상세정보 */
entity MatchTeam (tb_match_detail) {
  id String required maxlength(16) unique

  /** 승패여부 */
  isWinner Boolean

  /** AVG. PPD */
  avgPpd Float
  /** AVG. MPR */
  avgMpr Float

  /** winSet */
  winSet Integer
  /** winLeg */
  winLeg Integer

  /** 선수 호출 구분 */
  playerCallModeType PlayerCallModeType required
}

/** 매치점수 */
entity MatchScore (tb_match_score) {
  id String required maxlength(16) unique

  /** 세트순서 */
  setNo Integer
  /** 레그순서 */
  lgeNo Integer

  /** 레그게임명 */
  legGameName String
  /** 레그 홈팀 점수 */
  homeLegScore Float
  /** 레그 어웨이팀 점수 */
  awayLegScore Float
}

/** 매치 출석 */
entity MatchAttendance (tb_match_attendance) {
  id String required maxlength(16) unique
  /** 출석 상태 */
  attendanceStatusType AttendanceStatusType required
  /** 출석시간 */
  attendanceDateTime ZonedDateTime
}

/** 호출정보 */
entity MatchCall (tb_match_call) {
  id String required maxlength(16) unique
  /** 호출시간 */
  callDateTime ZonedDateTime
  /** 호출내용 */
  callMessage String maxlength(2048)
}



/** 머신 배치 */
entity MachineArea (tb_machine_area){
  id String required maxlength(16) unique
  /** 구역명 */
  mame String required maxlength(256)
  /** 순서 */
  seq Integer required
  /** 머신수 */
  numOfMachine Integer
}

/** 머신 상태 */
enum MachineStatusType {
  GOOD("정상")
  BREAKDOWN("고장")
}

/** 머신 */
entity Machine (tb_machine) {
  id String required maxlength(16) unique
  /** 순서 */
  machineNo Integer required
  /** 머신 상태 */
  machineStatusType MachineStatusType required
}

/** 리워드지급방법1 */
enum RewardMethodType {
  DAY("일별"),
  TOURNAMENT("토너먼트별")
}

/** 리워드지급방법2 */
enum RewardMethodSubType {
  ALL("All Division"),
  DIVISION("Division별")
}

/** 머신 종류 */
enum MachineKindType {
  VSS_S4("VSS[S4]"),
  VSX("VSX"),
  VSX_MAX("VSX-Max")
}

/** 리워드 */
entity Reward (tb_reward) {
  id String required maxlength(16) unique
  /** 지급방법1 (리워드설정) */
  rewardMethodType RewardMethodType required
  /** 지급방법2 (리워드설정) */
  rewardMethodSubType RewardMethodSubType required
  /** 아이템카테고리 수 */
  rewardCategoryNum Integer required
  /** 머신종류 */
  machineKindType MachineKindType
}



/** 리워드 */
entity RewardDetail (tb_reward_detail) {
  id String required maxlength(16) unique
  /** 지급방법이 DAY대회명 + Day + Entry Item */
  name String maxlength(256)
  /** 토너먼트ID */
  tournamentId String
  /** 디비전ID */
  divisionId String
}

/** RewardItem */
entity RewardItem (tb_rewad_item) {
  id String required maxlength(16) unique
  /** 아이템명*/
  name String required maxlength(50) unique
}

relationship ManyToOne {
  RewardItem{itemImage} to FileInfo
  Competition{competitionImage} to FileInfo
  AffiliatedInfo to FileInfo
  Team{captain} to Entry
  MatchAttendance to Entry
  Match{home} to MatchTeam
  Match{away} to MatchTeam
  MatchTeam to Team
  Competition to Reward
  Machine to Match
  Match{tmatch} to Machine
  Match to Division
  Team{tteam} to Division
  Team to AffiliatedInfo
  Team to PaymentInfo
  MatchFormatLeg{option} to MatchFormatOption
  MatchFormatGame to Game
  Tournament to EntryFee
  Competition to Country
  Competition to Operator
  Competition to EntryFee
  EntryFee to Currency
  Region to Country
  Country{image} to FileInfo
  Operator to OperatorRole
  Operator to Region
}

relationship OneToMany {
  OperatorRole to Role
  Competition to Tournament
  Tournament to Division
  Division to MatchFormat
  MatchFormat to MatchFormatGame
  MatchFormat to MatchFormatOption
  MatchFormat to MatchFormatSet
  MatchFormatSet to MatchFormatLeg
  Division to EventPoint
  Division to Team
  Team to Entry
  Match to MatchScore
  MatchTeam to MatchAttendance
  MatchTeam to MatchCall
  Competition to MachineArea
  MachineArea to Machine
  Reward to RewardDetail
  RewardDetail to RewardItem
}
